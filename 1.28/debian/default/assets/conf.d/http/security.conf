# The emitting of the 'Referrer-Policy' response header by NGINX is done in two steps and
# only if the proxied application has not already emit it. This is the first step.
#
# Create a variable to set the response header to the default value of 'strict-origin-when-cross-origin',
# if the response header has not already been emitted by the proxied application.
# Otherwise, the variable will be set to a empty value, which means that the NGINX will not emit this header.
#
# Meaning of 'strict-origin-when-cross-origin': Send the full referrer URL with the path on same origin,
# but only the URL without the path on foreign origin.
map $upstream_http_referrer_policy $response_header_referrer_policy {
    '' 'strict-origin-when-cross-origin';
}

# The emitting of the 'X-Frame-Options' response header by NGINX is done in two steps and
# only if the proxied application has not already emit it. This is the first step.
#
# Create a variable to set the response header to the default value of 'sameorigin'
# if the response header has not already been emitted by the proxied application.
# Otherwise, the variable will be set to a empty value, which means that the NGINX will not emit this header.
#
# Meaning of 'sameorigin': Allows the browser to render the page inside a frame as long as
# the site including the page in a frame is the same as the one serving the page.
map $upstream_http_x_frame_options $response_header_x_frame_options {
    '' 'sameorigin';
}

# The emitting of the 'X-Content-Type-Options' response header by NGINX is done in two steps and
# only if the proxied application has not already emit it. This is the first step.
#
# Create a variable to set the response header to the default value of 'nosniff'
# if the response header has not already been emitted by the proxied application.
# Otherwise, the variable will be set to a empty value, which means that the NGINX will not emit this header.
#
# Meaning of 'nosniff': Disables content-type sniffing on some browsers.
map $upstream_http_x_content_type_options $response_header_x_content_type_options {
    '' 'nosniff';
}

# The emitting of the 'X-Content-Type-Options' response header by NGINX is done in two steps and
# only if the proxied application has not already emit it. This is the first step.
#
# Create a variable to set the response header to the default value of '1; mode=block'
# if the response header has not already been emitted by the proxied application.
# Otherwise, the variable will be set to a empty value, which means that the NGINX will not emit this header.
#
# Meaning of '1; mode=block': Enables the Cross-site scripting (XSS) filter built into most recent web browsers.
map $upstream_http_x_xss_protection $response_header_x_xss_protection {
    '' '1; mode=block';
}

# Disables the emitting of the NGINX version.
server_tokens off;
